/*  This file is part of the Vc library. {{{

    Copyright (C) 2013 Matthias Kretz <kretz@kde.org>

    Vc is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of
    the License, or (at your option) any later version.

    Vc is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with Vc.  If not, see <http://www.gnu.org/licenses/>.

}}}*/

#ifndef VC_INCLUDE_VC_TYPE_TRAITS
#define VC_INCLUDE_VC_TYPE_TRAITS

#include <type_traits>

#include "common/type_traits.h"
#include "common/macros.h"
namespace Vc_VERSIONED_NAMESPACE
{
using Common::is_simd_mask;
using Common::is_simd_vector;
using Common::is_integral;
using Common::is_floating_point;
using Common::is_arithmetic;
using Common::is_signed;
using Common::is_unsigned;

template<typename T>
struct memory_alignment : public std::integral_constant<size_t, alignof(T)> {};

template<> struct memory_alignment<short_v> : public std::integral_constant<size_t, short_v::MemoryAlignment> {};
template<> struct memory_alignment<ushort_v> : public std::integral_constant<size_t, ushort_v::MemoryAlignment> {};

}

#include "common/undomacros.h"

#endif // VC_INCLUDE_VC_TYPE_TRAITS

// vim: ft=cpp
